<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGJSON: string_replace_1.ino</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGJSON
   &#160;<span id="projectnumber">release_100-62c2232 (git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing and building JSON, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('string_replace_1_8ino-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">string_replace_1.ino</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Example use of GJSON (embedded portable JSON library) - In this example a JSON string is parsed looking for an  </span></div>
<div class="line"><span class="comment"> * attribute/property, then a later attribute/property with a known name has its value replaced.  Local  I/O and </span></div>
<div class="line"><span class="comment"> * parser objects are used with a global string as I/O source.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Expected serial output (Arduino/Genuino Uno):</span></div>
<div class="line"><span class="comment"> * setup()</span></div>
<div class="line"><span class="comment"> * Input: { &quot;test&quot;:{ &quot;date&quot;: &quot;25Oct19&quot; }, &quot;time&quot; : &quot;12.45.34&quot;, &quot;date&quot; : &quot;29Oct19&quot;, &quot;code&quot; : &quot;3&quot; }</span></div>
<div class="line"><span class="comment"> * Found value: 12.45.34</span></div>
<div class="line"><span class="comment"> * Replaced proceeding date with 26Oct19</span></div>
<div class="line"><span class="comment"> * Output: { &quot;test&quot;:{ &quot;date&quot;: &quot;25Oct19&quot; }, &quot;time&quot; : &quot;12.45.34&quot;, &quot;date&quot; : &quot;26Oct19&quot;, &quot;code&quot; : &quot;3&quot; }</span></div>
<div class="line"><span class="comment"> * Done</span></div>
<div class="line"><span class="comment"> * </span></div>
<div class="line"><span class="comment"> * DG, 2019</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include</span></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="gjson_8h.htm">gjson.h</a>&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span>gjson;</div>
<div class="line"> </div>
<div class="line"><span class="comment">/*</span></div>
<div class="line"><span class="comment"> * Global JSON string to parse or build</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><span class="keywordtype">char</span> js[128] = <span class="stringliteral">&quot;{ \&quot;test\&quot;:{ \&quot;date\&quot;: \&quot;25Oct19\&quot; }, \&quot;time\&quot; : \&quot;12.45.34\&quot;, \&quot;date\&quot; : \&quot;29Oct19\&quot;, \&quot;code\&quot; : \&quot;3\&quot; }&quot;</span>;</div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> setup() {</div>
<div class="line">    <a name="_a0"></a><a class="code" href="classgjson_1_1_user_buffer.htm">UserBuffer</a> ubjio(js, <span class="keyword">sizeof</span>(js), strlen(js));                <span class="comment">// Maximum N, string dimension (including NULL) for JSON string parsing and building</span></div>
<div class="line">    <a name="_a1"></a><a class="code" href="classgjson_1_1_j_s_o_n_simple_string_parse_attr.htm">JSONSimpleStringParseAttr</a>&lt;15, <span class="keyword">sizeof</span>(js)&gt; pr(&amp;ubjio);        <span class="comment">// Maximum 256B (default) object chain can be generated</span></div>
<div class="line"> </div>
<div class="line">    Serial.begin(9600);</div>
<div class="line">    <span class="keywordflow">while</span>(!Serial) { }</div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;setup()&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    Serial.print(<span class="stringliteral">&quot;Input:  &quot;</span>);</div>
<div class="line">    Serial.println(ubjio.<a name="a2"></a><a class="code" href="classgjson_1_1_user_buffer.htm#a56f03017b8e08f1fcb1c8c432f8e34aa">Get</a>());</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Look for attribute/property &quot;time&quot;</span></div>
<div class="line">    uint16_t fci = pr.FromStringSearch(<span class="stringliteral">&quot;time&quot;</span>);</div>
<div class="line">    <span class="keywordflow">if</span> (pr.GetLastError() != JSONConstant::ERR_NONE) {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Last error: &quot;</span>);</div>
<div class="line">        Serial.print(pr.GetLastError());</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot; at character &quot;</span>);</div>
<div class="line">        Serial.println(fci);</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }<span class="keywordflow">else</span> {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Found value: &quot;</span>);</div>
<div class="line">        Serial.println(pr.GetAttrValue());</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// We&#39;ve moved over the test date as we searched for time, so we should replace the next date, 29Oct19 with another</span></div>
<div class="line">    pr.LimitNodeLevel(<span class="keyword">false</span>);  <span class="comment">// Optional, so we don&#39;t get to the end with an error other than not found so we specifically don&#39;t want to make sure brackets align (we started parsing at some place in middle of JSON string)</span></div>
<div class="line">    fci = pr.FromStringReplace(fci, <span class="stringliteral">&quot;date&quot;</span>, <span class="stringliteral">&quot;26Oct19&quot;</span>);</div>
<div class="line">    <span class="keywordflow">if</span> (pr.GetLastError() != JSONConstant::ERR_NONE) {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Last error: &quot;</span>);</div>
<div class="line">        Serial.print(pr.GetLastError());</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot; at character &quot;</span>);</div>
<div class="line">        Serial.println(fci);</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }<span class="keywordflow">else</span> {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Replaced proceeding date with &quot;</span>);</div>
<div class="line">        Serial.println(pr.GetAttrValue());</div>
<div class="line">    }</div>
<div class="line">    pr.LimitNodeLevel(<span class="keyword">true</span>);</div>
<div class="line"> </div>
<div class="line">    Serial.print(<span class="stringliteral">&quot;Output: &quot;</span>);</div>
<div class="line">    Serial.println(ubjio.<a class="code" href="classgjson_1_1_user_buffer.htm#a56f03017b8e08f1fcb1c8c432f8e34aa">Get</a>());</div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Done&quot;</span>);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> loop() {</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassgjson_1_1_user_buffer_htm"><div class="ttname"><a href="classgjson_1_1_user_buffer.htm">gjson::UserBuffer</a></div><div class="ttdoc">An class for a user specified buffer when JSON parsing.</div><div class="ttdef"><b>Definition:</b> gjson_io_buffer.h:228</div></div>
<div class="ttc" id="agjson_8h_htm"><div class="ttname"><a href="gjson_8h.htm">gjson.h</a></div></div>
<div class="ttc" id="aclassgjson_1_1_user_buffer_htm_a56f03017b8e08f1fcb1c8c432f8e34aa"><div class="ttname"><a href="classgjson_1_1_user_buffer.htm#a56f03017b8e08f1fcb1c8c432f8e34aa">gjson::UserBuffer::Get</a></div><div class="ttdeci">const char * Get() const</div><div class="ttdoc">Get I/O string pointer.</div><div class="ttdef"><b>Definition:</b> gjson_io_buffer.h:244</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_simple_string_parse_attr_htm"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_simple_string_parse_attr.htm">gjson::JSONSimpleStringParseAttr</a></div><div class="ttdoc">JSON non-recursive string parser by subclass for searching and replacing JSON string attributes/prope...</div><div class="ttdef"><b>Definition:</b> gjson_parser.h:1247</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 19:39:01 for ArduinoGJSON by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
