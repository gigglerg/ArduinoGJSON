<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGJSON: gjson::JSONSupport Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGJSON
   &#160;<span id="projectnumber">5b95ff6 (git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing and building JSON, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classgjson_1_1_j_s_o_n_support.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classgjson_1_1_j_s_o_n_support-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">gjson::JSONSupport Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>JSON support methods, mostly reusable string helpers.  
 <a href="classgjson_1_1_j_s_o_n_support.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="gjson__support_8h_source.htm">gjson_support.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a4b57f4c7a5872e11958400c7d45991ba"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#a4b57f4c7a5872e11958400c7d45991ba">IsNull</a> (const char *s, const uint16_t l)</td></tr>
<tr class="memdesc:a4b57f4c7a5872e11958400c7d45991ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query is string a JSON literal null.  <a href="classgjson_1_1_j_s_o_n_support.htm#a4b57f4c7a5872e11958400c7d45991ba">More...</a><br /></td></tr>
<tr class="separator:a4b57f4c7a5872e11958400c7d45991ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1af36d14f15f04901d5a73bad95dea53"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#a1af36d14f15f04901d5a73bad95dea53">IsBoolean</a> (const char *s, const uint16_t l)</td></tr>
<tr class="memdesc:a1af36d14f15f04901d5a73bad95dea53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query is string a JSON literal boolean.  <a href="classgjson_1_1_j_s_o_n_support.htm#a1af36d14f15f04901d5a73bad95dea53">More...</a><br /></td></tr>
<tr class="separator:a1af36d14f15f04901d5a73bad95dea53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada99703626a311f7c9cc1b6d2e140519"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#ada99703626a311f7c9cc1b6d2e140519">IsInt</a> (const char *s, const uint16_t l, bool allow_leading=false)</td></tr>
<tr class="memdesc:ada99703626a311f7c9cc1b6d2e140519"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query is string numeric integer with optional leading zero control.  <a href="classgjson_1_1_j_s_o_n_support.htm#ada99703626a311f7c9cc1b6d2e140519">More...</a><br /></td></tr>
<tr class="separator:ada99703626a311f7c9cc1b6d2e140519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ca9873f1df6ebd2e9eb84dad783300a"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#a0ca9873f1df6ebd2e9eb84dad783300a">IsDecimal</a> (const char *s, const uint16_t l, const bool allow_exponent=true)</td></tr>
<tr class="memdesc:a0ca9873f1df6ebd2e9eb84dad783300a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query is string numeric decimal with optional exponent check.  <a href="classgjson_1_1_j_s_o_n_support.htm#a0ca9873f1df6ebd2e9eb84dad783300a">More...</a><br /></td></tr>
<tr class="separator:a0ca9873f1df6ebd2e9eb84dad783300a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8020bb3920a3d2df1376981b8d898a"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#aff8020bb3920a3d2df1376981b8d898a">IsHex</a> (const char *s, const uint16_t l, const bool prefix_0x=true)</td></tr>
<tr class="memdesc:aff8020bb3920a3d2df1376981b8d898a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query is string numeric hexadecimal with optional inclusion of prefix.  <a href="classgjson_1_1_j_s_o_n_support.htm#aff8020bb3920a3d2df1376981b8d898a">More...</a><br /></td></tr>
<tr class="separator:aff8020bb3920a3d2df1376981b8d898a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e8f596709abf719e0e3ba6664e0e048"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#a7e8f596709abf719e0e3ba6664e0e048">IsLiteral</a> (const char *s, const uint16_t l, const bool allow_exponent=true)</td></tr>
<tr class="memdesc:a7e8f596709abf719e0e3ba6664e0e048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query is string JSON literal with optional exponent check.  <a href="classgjson_1_1_j_s_o_n_support.htm#a7e8f596709abf719e0e3ba6664e0e048">More...</a><br /></td></tr>
<tr class="separator:a7e8f596709abf719e0e3ba6664e0e048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9fffbe316b3208544297936b54d46e0"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#ad9fffbe316b3208544297936b54d46e0">HasLiteralExponent</a> (const char *s, uint16_t l)</td></tr>
<tr class="memdesc:ad9fffbe316b3208544297936b54d46e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query is string JSON literal decimal with exponent specified.  <a href="classgjson_1_1_j_s_o_n_support.htm#ad9fffbe316b3208544297936b54d46e0">More...</a><br /></td></tr>
<tr class="separator:ad9fffbe316b3208544297936b54d46e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5816c27ff0245054476d51addcbc68ad"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#a5816c27ff0245054476d51addcbc68ad">Replace</a> (char *d, uint16_t d_length, uint16_t d_max, int16_t sp, int16_t ep, const char *s, uint16_t sl)</td></tr>
<tr class="memdesc:a5816c27ff0245054476d51addcbc68ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Character string d contains substring between given character indexes that should be replaced by a null terminated string.  <a href="classgjson_1_1_j_s_o_n_support.htm#a5816c27ff0245054476d51addcbc68ad">More...</a><br /></td></tr>
<tr class="separator:a5816c27ff0245054476d51addcbc68ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8df4eb100877f83f5264ec8df7c5456"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm#ac8df4eb100877f83f5264ec8df7c5456">StrNCmp</a> (const char *s1, const char *s2, const int n, const bool case_sensitive=true)</td></tr>
<tr class="memdesc:ac8df4eb100877f83f5264ec8df7c5456"><td class="mdescLeft">&#160;</td><td class="mdescRight">Alternative from strncmpi and strncmp.  <a href="classgjson_1_1_j_s_o_n_support.htm#ac8df4eb100877f83f5264ec8df7c5456">More...</a><br /></td></tr>
<tr class="separator:ac8df4eb100877f83f5264ec8df7c5456"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>JSON support methods, mostly reusable string helpers. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad9fffbe316b3208544297936b54d46e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9fffbe316b3208544297936b54d46e0">&#9670;&nbsp;</a></span>HasLiteralExponent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool gjson::JSONSupport::HasLiteralExponent </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>l</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query is string JSON literal decimal with exponent specified. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated check string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length (characters) not including null </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String query result </dd></dl>

</div>
</div>
<a id="a1af36d14f15f04901d5a73bad95dea53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1af36d14f15f04901d5a73bad95dea53">&#9670;&nbsp;</a></span>IsBoolean()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool gjson::JSONSupport::IsBoolean </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>l</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query is string a JSON literal boolean. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated check string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length (characters) not including null </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String query result </dd></dl>

</div>
</div>
<a id="a0ca9873f1df6ebd2e9eb84dad783300a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ca9873f1df6ebd2e9eb84dad783300a">&#9670;&nbsp;</a></span>IsDecimal()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool gjson::JSONSupport::IsDecimal </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>l</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>allow_exponent</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query is string numeric decimal with optional exponent check. </p>
<p>IsDecimal("1.e-10",...) = 0, IsDecimal(...,false) = 0 IsDecimal("01.0e-10",...) = 0, IsDecimal(...,false) = 0 IsDecimal("0.000000e",...) = 0, IsDecimal(...,false) = 0 IsDecimal("1.0e-",...) = 0, IsDecimal(...,false) = 0 IsDecimal("1.0e+",...) = 0, IsDecimal(...,false) = 0 IsDecimal("1e10",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.000000e0",...) = 1, IsDecimal(...,false) = 0 IsDecimal("-0.000000e-0",...) = 1, IsDecimal(...,false) = 0 IsDecimal("1.0e-10",...) = 1, IsDecimal(...,false) = 0 IsDecimal("1.0e+10",...) = 1, IsDecimal(...,false) = 0 IsDecimal("1.0e0",...) = 1, IsDecimal(...,false) = 0 IsDecimal("1.0e+0",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.0e-1",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.0e+1",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.0e0",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.0e+0",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.1e345",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.1e+345",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0.1e-345",...) = 1, IsDecimal(...,false) = 0 IsDecimal("0",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-0",...) = 1, IsDecimal(...,false) = 1 IsDecimal("0.0",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-0.0",...) = 1, IsDecimal(...,false) = 1 IsDecimal("0.1234",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-0.1234",...) = 1, IsDecimal(...,false) = 1 IsDecimal("1.455",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-1.455",...) = 1, IsDecimal(...,false) = 1 IsDecimal("3455.455",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-3455.455",...) = 1, IsDecimal(...,false) = 1 IsDecimal("3455",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-3455",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-1.2",...) = 1, IsDecimal(...,false) = 1 IsDecimal("1.2",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-0.012",...) = 1, IsDecimal(...,false) = 1 IsDecimal("-0.000000",...) = 1, IsDecimal(...,false) = 1 IsDecimal("0.000000",...) = 1, IsDecimal(...,false) = 1</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated check string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length (characters) not including null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">allow_exponent</td><td>Exponent check control flag, default true(allow) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String query result </dd></dl>

</div>
</div>
<a id="aff8020bb3920a3d2df1376981b8d898a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8020bb3920a3d2df1376981b8d898a">&#9670;&nbsp;</a></span>IsHex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool gjson::JSONSupport::IsHex </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>l</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>prefix_0x</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query is string numeric hexadecimal with optional inclusion of prefix. </p>
<p>IsHex("Hello") = 0, IsHex(..., false) = 0 IsHex("true") = 0, IsHex(..., false) = 0 IsHex("false") = 0, IsHex(..., false) = 0 IsHex("1.456") = 0, IsHex(..., false) = 0 IsHex("-4.991") = 0, IsHex(..., false) = 0 IsHex("-3456") = 0, IsHex(..., false) = 0 IsHex("-04544") = 0, IsHex(..., false) = 0 IsHex("0x23j330") = 0, IsHex(..., false) = 0 IsHex("-00") = 0, IsHex(..., false) = 0 IsHex("-0") = 0, IsHex(..., false) = 0 IsHex("-12000000") = 0, IsHex(..., false) = 0 IsHex("0x000000e") = 1, IsHex(..., false) = 0 IsHex("0x002344ff") = 1, IsHex(..., false) = 0 IsHex("0xab203efe") = 1, IsHex(..., false) = 0 IsHex("0xdeadbeef") = 1, IsHex(..., false) = 0 IsHex("fffffff") = 0, IsHex(..., false) = 1 IsHex("000000e") = 0, IsHex(..., false) = 1 IsHex("9345") = 0, IsHex(..., false) = 1 IsHex("000455") = 0, IsHex(..., false) = 1 IsHex("100000") = 0, IsHex(..., false) = 1 IsHex("00") = 0, IsHex(..., false) = 1 IsHex("00000") = 0, IsHex(..., false) = 1 IsHex("000001") = 0, IsHex(..., false) = 1 IsHex("cafe") = 0, IsHex(..., false) = 1 IsHex("0") = 0, IsHex(..., false) = 1</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated check string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length (characters) not including null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prefix_0x</td><td>Prefix check control flag, default true(allow "0x" as prefix) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String query result </dd></dl>

</div>
</div>
<a id="ada99703626a311f7c9cc1b6d2e140519"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada99703626a311f7c9cc1b6d2e140519">&#9670;&nbsp;</a></span>IsInt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool gjson::JSONSupport::IsInt </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>l</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allow_leading</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query is string numeric integer with optional leading zero control. </p>
<p>IsInt("00.12") = 0, IsInt(..., true) = 0 IsInt("-00.12") = 0, IsInt(..., true) = 0 IsInt("-012") = 0, IsInt(..., true) = 0 IsInt("-00") = 0, IsInt(..., true) = 0 IsInt("0.0") = 0, IsInt(..., true) = 0 IsInt("-0.0") = 0, IsInt(..., true) = 0 IsInt("0.1234") = 0, IsInt(..., true) = 0 IsInt("1.455") = 0, IsInt(..., true) = 0 IsInt("3455.455") = 0, IsInt(..., true) = 0 IsInt("-0.1234") = 0, IsInt(..., true) = 0 IsInt("-1.455") = 0, IsInt(..., true) = 0 IsInt("-3455.455") = 0, IsInt(..., true) = 0 IsInt("-1.2") = 0, IsInt(..., true) = 0 IsInt("-012000009") = 0, IsInt(..., true) = 0 IsInt("000455") = 0, IsInt(..., true) = 1 IsInt("00") = 0, IsInt(..., true) = 1 IsInt("00000") = 0, IsInt(..., true) = 1 IsInt("000001") = 0, IsInt(..., true) = 1 IsInt("100000") = 1, IsInt(..., true) = 1 IsInt("0") = 1, IsInt(..., true) = 1 IsInt("-0") = 1, IsInt(..., true) = 1 IsInt("-12000000") = 1, IsInt(..., true) = 1 IsInt("-12000009") = 1, IsInt(..., true) = 1</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated check string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length (characters) not including null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">allow_leading</td><td>Leading zero check control flag, default false(not allowed) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String query result </dd></dl>

</div>
</div>
<a id="a7e8f596709abf719e0e3ba6664e0e048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e8f596709abf719e0e3ba6664e0e048">&#9670;&nbsp;</a></span>IsLiteral()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool gjson::JSONSupport::IsLiteral </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>l</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>allow_exponent</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query is string JSON literal with optional exponent check. </p>
<p>Used during parsing to ensure value data is correctly represented as literals.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated check string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length (characters) not including null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">allow_exponent</td><td>Exponent check control flag, default true(allow) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String query result </dd></dl>

</div>
</div>
<a id="a4b57f4c7a5872e11958400c7d45991ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b57f4c7a5872e11958400c7d45991ba">&#9670;&nbsp;</a></span>IsNull()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool gjson::JSONSupport::IsNull </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>l</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query is string a JSON literal null. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated check string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length (characters) not including null </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String query result </dd></dl>

</div>
</div>
<a id="a5816c27ff0245054476d51addcbc68ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5816c27ff0245054476d51addcbc68ad">&#9670;&nbsp;</a></span>Replace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint16_t gjson::JSONSupport::Replace </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>d_length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>d_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>sp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>sl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Character string d contains substring between given character indexes that should be replaced by a null terminated string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">d</td><td>Pointer, destination null terminated string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d_length</td><td>Actual length of destination string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d_max</td><td>Maximum possible length including null terminator of destination string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sp</td><td>Start position or character index into destionation string for replace </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ep</td><td>End position or character index into destionation string for replace </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer, null terminated replacement string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sl</td><td>Length (characters) of replacement string not including null </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>New destination length (characters). An update of d_length </dd></dl>

</div>
</div>
<a id="ac8df4eb100877f83f5264ec8df7c5456"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8df4eb100877f83f5264ec8df7c5456">&#9670;&nbsp;</a></span>StrNCmp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int gjson::JSONSupport::StrNCmp </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>case_sensitive</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Alternative from strncmpi and strncmp. </p>
<p>Some standard library implementations don't include</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s1</td><td>String, NULL terminated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s2</td><td>String, NULL terminated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Characters (length excluding NULL) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">case_sensitive</td><td>Case sensitive compare flag (default true) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>int Difference. s1 == s2 =&gt; 0, s1 &lt; s2 =&gt; -n, s2 &gt; s2 =&gt; +n </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>gjson</b></li><li class="navelem"><a class="el" href="classgjson_1_1_j_s_o_n_support.htm">JSONSupport</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 19:11:13 for ArduinoGJSON by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
