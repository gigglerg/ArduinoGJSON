<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGJSON: gjson::JSONTokenizer&lt; LENGTH &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGJSON
   &#160;<span id="projectnumber">5b95ff6 (git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing and building JSON, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classgjson_1_1_j_s_o_n_tokenizer.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classgjson_1_1_j_s_o_n_tokenizer-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">gjson::JSONTokenizer&lt; LENGTH &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>JSON base parser tokenizer handler abstract class.  
 <a href="classgjson_1_1_j_s_o_n_tokenizer.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="gjson__parser_8h_source.htm">gjson_parser.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaa7aa236f8bb7f98284e3ac9b497a760"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_tokenizer.htm#aaa7aa236f8bb7f98284e3ac9b497a760">TokenArray</a> (const <a class="el" href="classgjson_1_1_j_s_o_n_array.htm">JSONArray</a>&lt; LENGTH &gt; *e, char *s=NULL, uint16_t i=0)=0</td></tr>
<tr class="memdesc:aaa7aa236f8bb7f98284e3ac9b497a760"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback for JSON array element handling.  <a href="classgjson_1_1_j_s_o_n_tokenizer.htm#aaa7aa236f8bb7f98284e3ac9b497a760">More...</a><br /></td></tr>
<tr class="separator:aaa7aa236f8bb7f98284e3ac9b497a760"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c69d68ac7f40c71f05ee14dcbcdf34"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_tokenizer.htm#a95c69d68ac7f40c71f05ee14dcbcdf34">TokenMap</a> (const <a class="el" href="classgjson_1_1_j_s_o_n_array.htm">JSONArray</a>&lt; LENGTH &gt; *e, char *s=NULL, uint16_t i=0)=0</td></tr>
<tr class="memdesc:a95c69d68ac7f40c71f05ee14dcbcdf34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback for JSON map element handling.  <a href="classgjson_1_1_j_s_o_n_tokenizer.htm#a95c69d68ac7f40c71f05ee14dcbcdf34">More...</a><br /></td></tr>
<tr class="separator:a95c69d68ac7f40c71f05ee14dcbcdf34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a1fbc63ba92a7d1af93c71214fcf7da"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_j_s_o_n_tokenizer.htm#a4a1fbc63ba92a7d1af93c71214fcf7da">TokenString</a> (const <a class="el" href="classgjson_1_1_j_s_o_n_string.htm">JSONString</a>&lt; LENGTH &gt; *e, char *s=NULL, int16_t si=0, int16_t ei=0)=0</td></tr>
<tr class="memdesc:a4a1fbc63ba92a7d1af93c71214fcf7da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback for JSON string element handling.  <a href="classgjson_1_1_j_s_o_n_tokenizer.htm#a4a1fbc63ba92a7d1af93c71214fcf7da">More...</a><br /></td></tr>
<tr class="separator:a4a1fbc63ba92a7d1af93c71214fcf7da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;uint8_t LENGTH&gt;<br />
class gjson::JSONTokenizer&lt; LENGTH &gt;</h3>

<p>JSON base parser tokenizer handler abstract class. </p>
<p>Implement methods for callbacks on parsed items both string or object</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">LENGTH</td><td>Maximum length (including NULL terminator) in characters of a string attribute/property </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aaa7aa236f8bb7f98284e3ac9b497a760"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa7aa236f8bb7f98284e3ac9b497a760">&#9670;&nbsp;</a></span>TokenArray()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t LENGTH&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="classgjson_1_1_j_s_o_n_tokenizer.htm">gjson::JSONTokenizer</a>&lt; LENGTH &gt;::TokenArray </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgjson_1_1_j_s_o_n_array.htm">JSONArray</a>&lt; LENGTH &gt; *&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>s</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>i</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback for JSON array element handling. </p>
<p>Invoked from Parsing JSON strings, objects and when searching.</p>
<p>The return value mean is dependant on current operation, <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#aa931e443cfa598e5fd949575ff58ccad">JSONParse::GetLastOperation</a> If OP_FROM_STRING true -&gt; stop parsing If OP_FROM_OBJECT true -&gt; does nothing If OP_FIND_OBJECT true -&gt; take object, found</p>
<p>When implementing functionality in a subclass, setting an error condition will also terminate current operation, see last_error_ and <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#a24c157d15bc07f98f6555472e53e04b2">JSONParse::GetLastError</a></p>
<dl class="section note"><dt>Note</dt><dd>You may update source string but operation on data should be terminated if you are likely to affect output with change. </dd>
<dd>
Do not release element instance</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>Array element pointer. Updates can be made to element so long as the symantics of JSON are not broken. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Source JSON string pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Current parse character index into source JSON string </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>Operation dependant meaning, see above </td></tr>
    <tr><td class="paramname">false</td><td>Continue operation </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classgjson_1_1_j_s_o_n_example_object_parse.htm#aec3a7bf2442964a3e91a62b421085d16">gjson::JSONExampleObjectParse&lt; LENGTH &gt;</a>, <a class="el" href="classgjson_1_1_j_s_o_n_example_string_parse.htm#a1a080bff6f99c70278e2fe24599b7681">gjson::JSONExampleStringParse&lt; LENGTH &gt;</a>, <a class="el" href="classgjson_1_1_j_s_o_n_simple_string_parse_attr.htm#ac6e2e9764e0ca9601a8681532ac04774">gjson::JSONSimpleStringParseAttr&lt; LENGTH &gt;</a>, and <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#ae452d7337e07f183e8f4a73d4024e3a0">gjson::JSONParse&lt; LENGTH &gt;</a>.</p>

</div>
</div>
<a id="a95c69d68ac7f40c71f05ee14dcbcdf34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95c69d68ac7f40c71f05ee14dcbcdf34">&#9670;&nbsp;</a></span>TokenMap()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t LENGTH&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="classgjson_1_1_j_s_o_n_tokenizer.htm">gjson::JSONTokenizer</a>&lt; LENGTH &gt;::TokenMap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgjson_1_1_j_s_o_n_array.htm">JSONArray</a>&lt; LENGTH &gt; *&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>s</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>i</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback for JSON map element handling. </p>
<p>Invoked from Parsing JSON strings, objects and when searching.</p>
<p>The return value mean is dependant on current operation, <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#aa931e443cfa598e5fd949575ff58ccad">JSONParse::GetLastOperation</a> If OP_FROM_STRING true -&gt; stop parsing If OP_FROM_OBJECT true -&gt; does nothing If OP_FIND_OBJECT true -&gt; take object, found</p>
<p>When implementing functionality in a subclass, setting an error condition will also terminate current operation, see last_error_ and <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#a24c157d15bc07f98f6555472e53e04b2">JSONParse::GetLastError</a></p>
<dl class="section note"><dt>Note</dt><dd>You may update source string but operation on data should be terminated if you are likely to affect output with change. </dd>
<dd>
Do not release element instance</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>Array element pointer. Updates can be made to element so long as the symantics of JSON are not broken. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Source JSON string pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Current parse character index into source JSON string </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>Operation dependant meaning, see above </td></tr>
    <tr><td class="paramname">false</td><td>Continue operation </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classgjson_1_1_j_s_o_n_example_object_parse.htm#ad673a890fc90b127922828f14a93f0d6">gjson::JSONExampleObjectParse&lt; LENGTH &gt;</a>, <a class="el" href="classgjson_1_1_j_s_o_n_example_string_parse.htm#a3d5859088f968450b7a32a93d16004eb">gjson::JSONExampleStringParse&lt; LENGTH &gt;</a>, <a class="el" href="classgjson_1_1_j_s_o_n_simple_string_parse_attr.htm#a9c06b6e3e8ef6c1b27cfc88a1e9edc15">gjson::JSONSimpleStringParseAttr&lt; LENGTH &gt;</a>, and <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#ad2978c64590a563494b529baf9a3d8e6">gjson::JSONParse&lt; LENGTH &gt;</a>.</p>

</div>
</div>
<a id="a4a1fbc63ba92a7d1af93c71214fcf7da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a1fbc63ba92a7d1af93c71214fcf7da">&#9670;&nbsp;</a></span>TokenString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t LENGTH&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="classgjson_1_1_j_s_o_n_tokenizer.htm">gjson::JSONTokenizer</a>&lt; LENGTH &gt;::TokenString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgjson_1_1_j_s_o_n_string.htm">JSONString</a>&lt; LENGTH &gt; *&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>s</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>si</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>ei</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback for JSON string element handling. </p>
<p>A string could be a property/attribute or value. Invoked from Parsing JSON strings, objects and when searching.</p>
<p>The return value mean is dependant on current operation, <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#aa931e443cfa598e5fd949575ff58ccad">JSONParse::GetLastOperation</a> If OP_FROM_STRING true -&gt; stop parsing If OP_FROM_OBJECT true -&gt; does nothing If OP_FIND_OBJECT true -&gt; take object, found</p>
<p>When implementing functionality in a subclass, setting an error condition will also terminate current operation, see last_error_ and <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#a24c157d15bc07f98f6555472e53e04b2">JSONParse::GetLastError</a>.</p>
<dl class="section note"><dt>Note</dt><dd>You may update source string but operation on data should be terminated if you are likely to affect output with change. </dd>
<dd>
Do not release element instance</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>Array element pointer. Updates can be made to element so long as the symantics of JSON are not broken. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Source JSON string pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">si</td><td>Start character index into source JSON string. -1 not setup </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ei</td><td>End character index into source JSON string. -1 not setup </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>Operation dependant meaning, see above </td></tr>
    <tr><td class="paramname">false</td><td>Continue operation </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classgjson_1_1_j_s_o_n_example_object_parse.htm#af011da7688181f6955f1c593c8ce9a72">gjson::JSONExampleObjectParse&lt; LENGTH &gt;</a>, <a class="el" href="classgjson_1_1_j_s_o_n_example_string_parse.htm#abbd6315f4a91c57614b305826920e61e">gjson::JSONExampleStringParse&lt; LENGTH &gt;</a>, <a class="el" href="classgjson_1_1_j_s_o_n_simple_string_parse.htm#a0393b02d2eba611a7c3eb5bedd4ee582">gjson::JSONSimpleStringParse&lt; LENGTH &gt;</a>, <a class="el" href="classgjson_1_1_j_s_o_n_simple_string_parse_attr.htm#ae1abcfb198459f4b289688d2e7d0a385">gjson::JSONSimpleStringParseAttr&lt; LENGTH &gt;</a>, and <a class="el" href="classgjson_1_1_j_s_o_n_parse.htm#a64ecc54e29da2a937bf9bd1e1cac5852">gjson::JSONParse&lt; LENGTH &gt;</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>gjson</b></li><li class="navelem"><a class="el" href="classgjson_1_1_j_s_o_n_tokenizer.htm">JSONTokenizer</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 19:11:13 for ArduinoGJSON by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
