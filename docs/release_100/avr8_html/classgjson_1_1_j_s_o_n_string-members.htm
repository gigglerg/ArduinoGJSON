<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGJSON: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGJSON
   &#160;<span id="projectnumber">release_100-62c2232 (git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing and building JSON, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classgjson_1_1_j_s_o_n_string.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">gjson::JSONString&lt; LENGTH, T &gt; Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ARRAY</b> enum value (defined in <a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a>)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a64678de5bfca0f2cdf6e4985b8be860d">Boolean</a>(const bool v)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ae6299dec62ffdc27b5f3e7124fef740b">Data</a>(const DT d, const char *format, const bool prefer_literal=true, const bool allow_exponent=GJSON_DEFAULT_EXPONENTIAL_NOTATION)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ae686c31d5cc170c6f42bb375b3356d32">Data</a>(const char *d, const bool prefer_literal=false, const uint16_t length=0, const bool allow_exponent=GJSON_DEFAULT_EXPONENTIAL_NOTATION)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#acba03aa85392522c5f5fb3dd54c8365f">Data</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#ad3b6b76318e9ecba0d4811c501d3b7e0">e_</a></td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a9e330fc617fe06e7b85e27402a7e70de">is_value_</a></td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#aa0f8ad4bdbc1ff7e55687a579d0852dd">IsBoolean</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a40377dc6c708d77928cf596c6d5f7b71">IsDecimal</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#aa51515cca0fb7fadfd3204acac180273">IsHex</a>(const bool prefix_0x=true) const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a3e56ed57c4722754a951661974580888">IsInt</a>(bool allow_leading_zero=false) const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a3405800ee596a60d218fdf4a1aadb625">IsNull</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ae9cf11bdbf0bd7694e9777d36ced8340">IsValue</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a4c3283b9cf0f4c4bdf3543469e7a4f94">IsValueLiteral</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#ac74c4cecb610c68ff4c349c79e3423e5">JSONElement</a>(JSONElement *e=NULL)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ac4345dff62fd029901c2421e85406198">JSONString</a>(const bool is_value=true, JSONElement&lt; LENGTH &gt; *e=NULL)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ac9ef5efb245daad195e572121e5075ae">JSONString</a>(const char *s, const bool is_value=true, const bool is_literal=false)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a6653e2163a85880d02034dc7a3cb7d88">JSONString</a>(const char *s, JSONElement&lt; LENGTH &gt; *e, const bool is_value=true, const bool is_literal=false)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a7ef807de20090e57d9c735f1eeb0fad8">JSONString</a>(const char *s, uint16_t l, JSONElement&lt; LENGTH &gt; *e, const bool is_value=true, const bool is_literal=false)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ad969b7d7e6e9de05ee7f639ce2e061e8">JSONString</a>(const T d, const char *format, const bool is_value=true, const bool prefer_literal=true)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a662269f37d783642caa5d41375c029f9">JSONString</a>(const T d, const char *format, JSONElement&lt; LENGTH &gt; *e, const bool is_value=true, const bool prefer_literal=true)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a113be6765c9220579d692e4b07217d7c">Length</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ab73227c1f8c1c632e2a7c1b2fd0a382c">Length</a>(const uint16_t l)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a18d5aa55a97cd789d0de165aadb1eff4">length_</a></td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a98817960986a9a2edeec9586aa19d106">literal_</a></td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>MAP</b> enum value (defined in <a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a>)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#ad40f0fee08ec85671b2ac8aa86f4bf0d">Next</a>() const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#a12ec343328c4f24c9dca21d5042ab897">Next</a>(JSONElement *e)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>NOTSET</b> enum value (defined in <a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a>)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#ac8e2255110e706a41b2f0b883b81493b">Null</a>()</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a911c9f323baba4694d426d14c5ed691f">operator!=</a>(const JSONString&lt; LENGTH &gt; &amp;rhs) const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#afffd88597a128af985bc22505f8b4134">operator!=</a>(const char *rhs) const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#afe2d2eeff6e2299521f0431b5e2f10aa">operator==</a>(const JSONString&lt; LENGTH &gt; &amp;rhs) const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a0799b6cbde7ad5a0119a1187b439cabc">operator==</a>(const char *rhs) const</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>STRING</b> enum value (defined in <a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a>)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a14f69b5200814dec09156d722fb60c2e">string_</a></td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#acc3d5141543f190a30c74f780874e5cf">Type</a>()</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#a39518c65fbd517cb941910cfafee1986">Type</a>(const TYPE type)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#aac7ccd0da6e57c643a306e188ac65437">TYPE</a> enum name</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm#a2ab1dc9f4ba28df4717e446c4b04de13">type_</a></td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_element.htm">gjson::JSONElement&lt; LENGTH &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm#a57fa50f82794bc585f86fcf77b279dd7">Value</a>(const bool is_value)</td><td class="entry"><a class="el" href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString&lt; LENGTH, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 19:39:01 for ArduinoGJSON by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
