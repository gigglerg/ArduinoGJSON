<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGJSON: simple_object_map.ino</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGJSON
   &#160;<span id="projectnumber">release_100-62c2232 (git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing and building JSON, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('simple_object_map_8ino-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">simple_object_map.ino</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Example use of GJSON (embedded portable JSON library) - In this example a JSON map containing attributes/property and </span></div>
<div class="line"><span class="comment"> * values as objects is used to generate a JSON string.  Local instance of parser and a stacked string is used as I/O.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Expected serial output (Arduino/Genuino Uno):</span></div>
<div class="line"><span class="comment"> * setup()</span></div>
<div class="line"><span class="comment"> * Length: 33</span></div>
<div class="line"><span class="comment"> * Output: { &quot;item&quot;:&quot;computer&quot;, &quot;id&quot;:1234 }</span></div>
<div class="line"><span class="comment"> * Done</span></div>
<div class="line"><span class="comment"> * </span></div>
<div class="line"><span class="comment"> * DG, 2019</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include</span></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="gjson_8h.htm">gjson.h</a>&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span>gjson;</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> setup() {</div>
<div class="line">    Serial.begin(9600);</div>
<div class="line">    <span class="keywordflow">while</span>(!Serial) { }</div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;setup()&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Expect something like: { &quot;item&quot;:&quot;computer&quot;, &quot;id&quot;:345 }</span></div>
<div class="line">    <span class="keywordtype">char</span> js[48];</div>
<div class="line">    <a name="_a0"></a><a class="code" href="classgjson_1_1_user_buffer.htm">UserBuffer</a> ubjio(js, <span class="keyword">sizeof</span>(js));</div>
<div class="line">    <a name="_a1"></a><a class="code" href="classgjson_1_1_j_s_o_n_parse.htm">gjson::JSONParse&lt;12, 0&gt;</a> pr(&amp;ubjio);    <span class="comment">// Maximum 0B object chain can be generated.  We don&#39;t need them as taking existing objects into string</span></div>
<div class="line"> </div>
<div class="line">    <span class="keyword">auto</span> a = <a name="_a2"></a><a class="code" href="classgjson_1_1_j_s_o_n_map.htm">JSONMap&lt;12&gt;</a>();                                      <span class="comment">// Map(o) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> b = <a name="_a3"></a><a class="code" href="classgjson_1_1_j_s_o_n_string.htm">JSONString&lt;12&gt;</a>(<span class="stringliteral">&quot;item&quot;</span>, &amp;a, <span class="keyword">false</span>);                  <span class="comment">// String(&quot;item&quot;, attr) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> c = <a class="code" href="classgjson_1_1_j_s_o_n_string.htm">JSONString&lt;12&gt;</a>(<span class="stringliteral">&quot;computer&quot;</span>, &amp;b);                     <span class="comment">// String(&quot;computer&quot;, value) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> d = <a class="code" href="classgjson_1_1_j_s_o_n_string.htm">JSONString&lt;12&gt;</a>(<span class="stringliteral">&quot;id&quot;</span>, &amp;c, <span class="keyword">false</span>);                    <span class="comment">// String(&quot;id&quot;, attr) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> e = <a class="code" href="classgjson_1_1_j_s_o_n_string.htm">JSONString&lt;12&gt;</a>(<span class="stringliteral">&quot;1234&quot;</span>, &amp;d, <span class="keyword">true</span>, <span class="keyword">true</span>);             <span class="comment">// String(&quot;1234&quot;, value, literal) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> f = <a class="code" href="classgjson_1_1_j_s_o_n_map.htm">JSONMap&lt;12&gt;</a>(&amp;e,<span class="keyword">false</span>);                              <span class="comment">// Map(c)</span></div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">bool</span> err = pr.<a name="a4"></a><a class="code" href="classgjson_1_1_j_s_o_n_parse.htm#a100259b154df186fef74678128c1dd66">FromObject</a>(&amp;a);</div>
<div class="line">    <span class="keywordflow">if</span> (!err) {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Last error: &quot;</span>);</div>
<div class="line">        Serial.println(pr.<a name="a5"></a><a class="code" href="classgjson_1_1_j_s_o_n_parse.htm#a24c157d15bc07f98f6555472e53e04b2">GetLastError</a>());</div>
<div class="line">    }<span class="keywordflow">else</span> {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Length: &quot;</span>);</div>
<div class="line">        Serial.println(pr.<a name="a6"></a><a class="code" href="classgjson_1_1_j_s_o_n_parse.htm#aa66f44a617f2ad4482ca3a5d196594c4">Length</a>());</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Output: &quot;</span>);</div>
<div class="line">        Serial.println(pr.<a name="a7"></a><a class="code" href="classgjson_1_1_j_s_o_n_parse.htm#a2c85d62d81a79f6a1a5f5fb9d17fe2c5">Get</a>());</div>
<div class="line">    }</div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Done&quot;</span>);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> loop() {</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_parse_htm_a2c85d62d81a79f6a1a5f5fb9d17fe2c5"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_parse.htm#a2c85d62d81a79f6a1a5f5fb9d17fe2c5">gjson::JSONParse::Get</a></div><div class="ttdeci">const char * Get()</div><div class="ttdoc">Get I/O object data pointer.</div><div class="ttdef"><b>Definition:</b> gjson_parser.h:1145</div></div>
<div class="ttc" id="aclassgjson_1_1_user_buffer_htm"><div class="ttname"><a href="classgjson_1_1_user_buffer.htm">gjson::UserBuffer</a></div><div class="ttdoc">An class for a user specified buffer when JSON parsing.</div><div class="ttdef"><b>Definition:</b> gjson_io_buffer.h:228</div></div>
<div class="ttc" id="agjson_8h_htm"><div class="ttname"><a href="gjson_8h.htm">gjson.h</a></div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_parse_htm_a24c157d15bc07f98f6555472e53e04b2"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_parse.htm#a24c157d15bc07f98f6555472e53e04b2">gjson::JSONParse::GetLastError</a></div><div class="ttdeci">ERR GetLastError() const</div><div class="ttdoc">Get last JSON parse or find error condition (if any).</div><div class="ttdef"><b>Definition:</b> gjson_parser.h:1102</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_parse_htm"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_parse.htm">gjson::JSONParse</a></div><div class="ttdoc">JSON base non-recursive parser offering string parsing using user supplied I/O.</div><div class="ttdef"><b>Definition:</b> gjson_parser.h:154</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_parse_htm_aa66f44a617f2ad4482ca3a5d196594c4"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_parse.htm#aa66f44a617f2ad4482ca3a5d196594c4">gjson::JSONParse::Length</a></div><div class="ttdeci">uint16_t Length()</div><div class="ttdoc">Get I/O object data length, see gjson::IO::GetLength.</div><div class="ttdef"><b>Definition:</b> gjson_parser.h:1135</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_map_htm"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_map.htm">gjson::JSONMap</a></div><div class="ttdoc">A class representing a JSON in-memory map element.</div><div class="ttdef"><b>Definition:</b> gjson_elements.h:640</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_parse_htm_a100259b154df186fef74678128c1dd66"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_parse.htm#a100259b154df186fef74678128c1dd66">gjson::JSONParse::FromObject</a></div><div class="ttdeci">bool FromObject(JSONElement&lt; LENGTH &gt; *e)</div><div class="ttdoc">Parse given JSON object chain, build JSON string in I/O object, optionally build JSON string.</div><div class="ttdef"><b>Definition:</b> gjson_parser.h:627</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_string_htm"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_string.htm">gjson::JSONString</a></div><div class="ttdoc">A class representing a JSON in-memory string element, templated maximum dimension.</div><div class="ttdef"><b>Definition:</b> gjson_elements.h:107</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 19:39:01 for ArduinoGJSON by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
