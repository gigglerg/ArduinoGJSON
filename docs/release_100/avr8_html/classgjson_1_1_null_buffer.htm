<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGJSON: gjson::NullBuffer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGJSON
   &#160;<span id="projectnumber">release_100-d2fdcd7 (git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing and building JSON, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classgjson_1_1_null_buffer.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classgjson_1_1_null_buffer-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">gjson::NullBuffer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>An class for a NULL buffer when JSON parsing.  
 <a href="classgjson_1_1_null_buffer.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="gjson__io__buffer_8h_source.htm">gjson_io_buffer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab574423c038b6f297777b4246a102727"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#ab574423c038b6f297777b4246a102727">Get</a> () const</td></tr>
<tr class="memdesc:ab574423c038b6f297777b4246a102727"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get I/O string pointer.  <a href="classgjson_1_1_null_buffer.htm#ab574423c038b6f297777b4246a102727">More...</a><br /></td></tr>
<tr class="separator:ab574423c038b6f297777b4246a102727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2da2a8a432ae90f54a364a8393e84b7"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#af2da2a8a432ae90f54a364a8393e84b7">Get</a> (uint16_t i) const</td></tr>
<tr class="memdesc:af2da2a8a432ae90f54a364a8393e84b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get character from I/O at specific index.  <a href="classgjson_1_1_null_buffer.htm#af2da2a8a432ae90f54a364a8393e84b7">More...</a><br /></td></tr>
<tr class="separator:af2da2a8a432ae90f54a364a8393e84b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eac2714cabf79c3651d37a10ffc4b51"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#a5eac2714cabf79c3651d37a10ffc4b51">GetLength</a> (const bool maximum=false) const</td></tr>
<tr class="memdesc:a5eac2714cabf79c3651d37a10ffc4b51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get I/O length, actual length and maximum.  <a href="classgjson_1_1_null_buffer.htm#a5eac2714cabf79c3651d37a10ffc4b51">More...</a><br /></td></tr>
<tr class="separator:a5eac2714cabf79c3651d37a10ffc4b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac373c344e4acc6fce1a118c1f746e0ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#ac373c344e4acc6fce1a118c1f746e0ef">Length</a> (const uint16_t length)</td></tr>
<tr class="memdesc:ac373c344e4acc6fce1a118c1f746e0ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set I/O length.  <a href="classgjson_1_1_null_buffer.htm#ac373c344e4acc6fce1a118c1f746e0ef">More...</a><br /></td></tr>
<tr class="separator:ac373c344e4acc6fce1a118c1f746e0ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1096eb80e8753e3af82565cf92b524b4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#a1096eb80e8753e3af82565cf92b524b4">Put</a> (uint16_t i, char v)</td></tr>
<tr class="memdesc:a1096eb80e8753e3af82565cf92b524b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put character at index.  <a href="classgjson_1_1_null_buffer.htm#a1096eb80e8753e3af82565cf92b524b4">More...</a><br /></td></tr>
<tr class="separator:a1096eb80e8753e3af82565cf92b524b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a7a1def7571498578d59525b152b79"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#a70a7a1def7571498578d59525b152b79">Append</a> (char v)</td></tr>
<tr class="memdesc:a70a7a1def7571498578d59525b152b79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append character.  <a href="classgjson_1_1_null_buffer.htm#a70a7a1def7571498578d59525b152b79">More...</a><br /></td></tr>
<tr class="separator:a70a7a1def7571498578d59525b152b79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9ed9029589745c0ae0d2142c72af371"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#ad9ed9029589745c0ae0d2142c72af371">Append</a> (const char *s)</td></tr>
<tr class="memdesc:ad9ed9029589745c0ae0d2142c72af371"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append NULL terminated string.  <a href="classgjson_1_1_null_buffer.htm#ad9ed9029589745c0ae0d2142c72af371">More...</a><br /></td></tr>
<tr class="separator:ad9ed9029589745c0ae0d2142c72af371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f221f42dfb7a93ee1aee21b216ee87d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgjson_1_1_null_buffer.htm#a5f221f42dfb7a93ee1aee21b216ee87d">Replace</a> (const char *s, uint16_t sp, uint16_t ep)</td></tr>
<tr class="memdesc:a5f221f42dfb7a93ee1aee21b216ee87d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper, replace string content between start and end indexes with given string.  <a href="classgjson_1_1_null_buffer.htm#a5f221f42dfb7a93ee1aee21b216ee87d">More...</a><br /></td></tr>
<tr class="separator:a5f221f42dfb7a93ee1aee21b216ee87d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>An class for a NULL buffer when JSON parsing. </p>
<p>This offers the smallest footprint but limits use of JSON parsing to your source string </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="custom_object_parse_8ino-example.htm#_a14">custom_object_parse.ino</a>, <a class="el" href="custom_string_parse_8ino-example.htm#_a10">custom_string_parse.ino</a>, <a class="el" href="object_search_1_8ino-example.htm#_a0">object_search_1.ino</a>, <a class="el" href="object_search_2_8ino-example.htm#_a0">object_search_2.ino</a>, <a class="el" href="string_to_object_1_8ino-example.htm#_a0">string_to_object_1.ino</a>, and <a class="el" href="string_to_object_2_8ino-example.htm#_a0">string_to_object_2.ino</a>.</dd>
</dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a70a7a1def7571498578d59525b152b79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70a7a1def7571498578d59525b152b79">&#9670;&nbsp;</a></span>Append() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gjson::NullBuffer::Append </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append character. </p>
<dl class="section attention"><dt>Attention</dt><dd>Ignore parameters for NULL I/O</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Character </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Always failure (there is no I/O) </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#a7e425b3b355808999be7bbdef8394ba9">gjson::IO</a>.</p>

</div>
</div>
<a id="ad9ed9029589745c0ae0d2142c72af371"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9ed9029589745c0ae0d2142c72af371">&#9670;&nbsp;</a></span>Append() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gjson::NullBuffer::Append </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append NULL terminated string. </p>
<dl class="section attention"><dt>Attention</dt><dd>Ignore parameters for NULL I/O</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer to NULL termined string for append </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>Success </td></tr>
    <tr><td class="paramname">false</td><td>Failure, buffer full </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#a3441c6ff88b0cd4abc01ba77e277a5e3">gjson::IO</a>.</p>

</div>
</div>
<a id="ab574423c038b6f297777b4246a102727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab574423c038b6f297777b4246a102727">&#9670;&nbsp;</a></span>Get() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* gjson::NullBuffer::Get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get I/O string pointer. </p>
<dl class="section return"><dt>Returns</dt><dd>NULL </dd></dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#a53c3b365da65e5976367ff958cdd0c5b">gjson::IO</a>.</p>

</div>
</div>
<a id="af2da2a8a432ae90f54a364a8393e84b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2da2a8a432ae90f54a364a8393e84b7">&#9670;&nbsp;</a></span>Get() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char gjson::NullBuffer::Get </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get character from I/O at specific index. </p>
<dl class="section attention"><dt>Attention</dt><dd>Ignore parameters for NULL I/O</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Character '\0' (NULL terminator) </dd></dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#a301ebfa963494951ab8328ddbc1d8952">gjson::IO</a>.</p>

</div>
</div>
<a id="a5eac2714cabf79c3651d37a10ffc4b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5eac2714cabf79c3651d37a10ffc4b51">&#9670;&nbsp;</a></span>GetLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t gjson::NullBuffer::GetLength </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>maximum</em> = <code>false</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get I/O length, actual length and maximum. </p>
<dl class="section attention"><dt>Attention</dt><dd>Ignore parameters for NULL I/O</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">maximum</td><td>Boolean </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Character count, always 0 </dd></dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#a70867f05ad07d5e67db7be2544d29e09">gjson::IO</a>.</p>

</div>
</div>
<a id="ac373c344e4acc6fce1a118c1f746e0ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac373c344e4acc6fce1a118c1f746e0ef">&#9670;&nbsp;</a></span>Length()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gjson::NullBuffer::Length </td>
          <td>(</td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>length</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set I/O length. </p>
<dl class="section attention"><dt>Attention</dt><dd>Ignore parameters for NULL I/O</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>Characters </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#af8227499ea2638b89a58ed5fc97af364">gjson::IO</a>.</p>

</div>
</div>
<a id="a1096eb80e8753e3af82565cf92b524b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1096eb80e8753e3af82565cf92b524b4">&#9670;&nbsp;</a></span>Put()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gjson::NullBuffer::Put </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Put character at index. </p>
<dl class="section attention"><dt>Attention</dt><dd>Ignore parameters for NULL I/O</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Index </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Character </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Always failure (there is no I/O) </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#a02a0318e3c6c7c1386e842abb745a2b4">gjson::IO</a>.</p>

</div>
</div>
<a id="a5f221f42dfb7a93ee1aee21b216ee87d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f221f42dfb7a93ee1aee21b216ee87d">&#9670;&nbsp;</a></span>Replace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gjson::NullBuffer::Replace </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>sp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Helper, replace string content between start and end indexes with given string. </p>
<dl class="section attention"><dt>Attention</dt><dd>Ignore parameters for NULL I/O</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Pointer to NULL termined string for replace </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sp</td><td>Start index (characters) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ep</td><td>End index (characters), should be larger than start index </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Replace state, always fail </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgjson_1_1_i_o.htm#a527f2370a337d2a88cc089280aede817">gjson::IO</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>gjson</b></li><li class="navelem"><a class="el" href="classgjson_1_1_null_buffer.htm">NullBuffer</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 19:32:36 for ArduinoGJSON by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
