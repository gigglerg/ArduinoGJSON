<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGJSON: object_update_2.ino</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGJSON
   &#160;<span id="projectnumber">release_100-d2fdcd7 (git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing and building JSON, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('object_update_2_8ino-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">object_update_2.ino</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Example use of GJSON (embedded portable JSON library) - In this example a JSON object chain on the stack containing </span></div>
<div class="line"><span class="comment"> * some attribute/properties is searched, a value updated, then parsed to a JSON string.  A global I/O buffer is used </span></div>
<div class="line"><span class="comment"> * with JSON parser.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Expected serial output (Arduino/Genuino Uno):</span></div>
<div class="line"><span class="comment"> * setup()</span></div>
<div class="line"><span class="comment"> * Find string(s)</span></div>
<div class="line"><span class="comment"> * Attribute: material</span></div>
<div class="line"><span class="comment"> * Length: 40</span></div>
<div class="line"><span class="comment"> * Output: { &quot;door&quot;:&quot;handle&quot;, &quot;material&quot;:&quot;steel&quot; }</span></div>
<div class="line"><span class="comment"> * Done</span></div>
<div class="line"><span class="comment"> * </span></div>
<div class="line"><span class="comment"> * DG, 2019</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include</span></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="gjson_8h.htm">gjson.h</a>&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">/*</span></div>
<div class="line"><span class="comment"> * Global I/O buffer + JSON Parsing and building instance</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><a name="_a0"></a><a class="code" href="classgjson_1_1_buffer.htm">gjson::Buffer&lt;48&gt;</a> jio;                         <span class="comment">// Maximum 32 (including NULL) character JSON string</span></div>
<div class="line"><a name="_a1"></a><a class="code" href="classgjson_1_1_j_s_o_n_parse.htm">gjson::JSONParse&lt;12, 100&gt;</a> pr(&amp;jio);            <span class="comment">// Maximum 100B object chain can be generated, however this isn&#39;t required for this example</span></div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> setup() {</div>
<div class="line">    Serial.begin(9600);</div>
<div class="line">    <span class="keywordflow">while</span>(!Serial) { }</div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;setup()&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Expect something like: { &quot;door&quot;:&quot;handle&quot;, &quot;material&quot;:&quot;brass&quot; }</span></div>
<div class="line">    <span class="keyword">auto</span> a = <a name="_a2"></a><a class="code" href="classgjson_1_1_j_s_o_n_map.htm">gjson::JSONMap&lt;12&gt;</a>();                                <span class="comment">// Map(o) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> b = <a name="_a3"></a><a class="code" href="classgjson_1_1_j_s_o_n_map_tuple.htm">gjson::JSONMapTuple&lt;12&gt;</a>(<span class="stringliteral">&quot;door&quot;</span>, <span class="stringliteral">&quot;handle&quot;</span>, &amp;a);       <span class="comment">// String(&quot;door&quot;) &gt; String(&quot;handle&quot;) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> c = <a class="code" href="classgjson_1_1_j_s_o_n_map_tuple.htm">gjson::JSONMapTuple&lt;12&gt;</a>(<span class="stringliteral">&quot;material&quot;</span>, <span class="stringliteral">&quot;brass&quot;</span>, &amp;b);    <span class="comment">// String(&quot;material&quot;) &gt; String(&quot;brass&quot;) &gt;</span></div>
<div class="line">    <span class="keyword">auto</span> d = <a class="code" href="classgjson_1_1_j_s_o_n_map.htm">gjson::JSONMap&lt;12&gt;</a>(&amp;c,<span class="keyword">false</span>);                        <span class="comment">// Map(c)</span></div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Find string(s)&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Find material attribute</span></div>
<div class="line">    <span class="keyword">auto</span> dd = pr.FindString(&amp;a, <span class="stringliteral">&quot;material&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line">    <span class="keywordflow">if</span> (pr.GetLastError() != gjson::JSONConstant::ERR_NONE || NULL==dd) {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Last error: &quot;</span>);</div>
<div class="line">        Serial.print(pr.GetLastError());</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line">    Serial.print(<span class="stringliteral">&quot;Attribute: &quot;</span>);</div>
<div class="line">    Serial.println(dd-&gt;Data());</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Move to next value string</span></div>
<div class="line">    dd = pr.NextString(dd);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Update</span></div>
<div class="line">    dd-&gt;Data(<span class="stringliteral">&quot;steel&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// To string, should include the update...</span></div>
<div class="line">    <span class="keywordtype">bool</span> err = pr.FromObject(&amp;a);</div>
<div class="line">    <span class="keywordflow">if</span> (!err) {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Last error: &quot;</span>);</div>
<div class="line">        Serial.println(pr.GetLastError());</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }<span class="keywordflow">else</span> {</div>
<div class="line">        <span class="comment">// Display built JSON string from our I/O instance</span></div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Length: &quot;</span>);</div>
<div class="line">        Serial.println(pr.Length());</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Output: &quot;</span>);</div>
<div class="line">        Serial.println(pr.Get());</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Done&quot;</span>);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> loop() {</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassgjson_1_1_buffer_htm"><div class="ttname"><a href="classgjson_1_1_buffer.htm">gjson::Buffer</a></div><div class="ttdoc">An class for an internally managed character buffer when JSON parsing.</div><div class="ttdef"><b>Definition:</b> gjson_io_buffer.h:341</div></div>
<div class="ttc" id="agjson_8h_htm"><div class="ttname"><a href="gjson_8h.htm">gjson.h</a></div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_parse_htm"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_parse.htm">gjson::JSONParse</a></div><div class="ttdoc">JSON base non-recursive parser offering string parsing using user supplied I/O.</div><div class="ttdef"><b>Definition:</b> gjson_parser.h:154</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_map_htm"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_map.htm">gjson::JSONMap</a></div><div class="ttdoc">A class representing a JSON in-memory map element.</div><div class="ttdef"><b>Definition:</b> gjson_elements.h:640</div></div>
<div class="ttc" id="aclassgjson_1_1_j_s_o_n_map_tuple_htm"><div class="ttname"><a href="classgjson_1_1_j_s_o_n_map_tuple.htm">gjson::JSONMapTuple</a></div><div class="ttdoc">A builder, helper class representing a JSON tuple (Map) between 2 strings a property/attribute and it...</div><div class="ttdef"><b>Definition:</b> gjson_builders.h:23</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 19:32:36 for ArduinoGJSON by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
